- model_class = Bodycomp
.container-narrow
  .row-fluid
    .span4
      .well.sidebar-nav
        %a{:href => client_path(@bodycomp.client), :rel => 'tooltip', :title => "View client #{@bodycomp.client.full_name}"}
          %button.btn
            %h4.text-success
              %i.icon-user
              = @bodycomp.client.full_name
        %h4.text-error
          %i.icon-th-list
          Bodycomp
        %p
          %strong= "Date"
          = @bodycomp.date.strftime("%b %e %Y")
        %p
          %strong= "Age"
          = @bodycomp.client.dob_age
        %p
          %strong= "Weight"
          = @bodycomp.weight
          = @bodycomp.weight_units
        %p
          %strong= "Body Fat"
          = @bodycomp.bodyfat_percent.round(1).to_s + "%" unless @bodycomp.bodydensity.blank?
        %p
          %strong= "Weight"
          = @bodycomp.weight
          = @bodycomp.weight_units
        %p
          %strong= "Lean Mass"
          = @bodycomp.lean_mass.round(1) unless @bodycomp.bodydensity.blank?
          = @bodycomp.weight_units
        %p
          %strong= "Fat Mass"
          = @bodycomp.fat_mass.round(1) unless @bodycomp.bodydensity.blank?
          = @bodycomp.weight_units
        %p
          %strong= "BMR"
          = @bodycomp.bmr.round unless @bodycomp.bodydensity.blank?
          Calories
        %p
          %strong= "BMI"
          = @bodycomp.bmi
        - unless @bodycomp.waist_hip_ratio.blank?
          %p
            %strong= "WHR"
            = @bodycomp.waist_hip_ratio
        - unless @bodycomp.notes.blank?
          %p
            %strong= "Notes"
            = @bodycomp.notes
    .span8
      .tabbable{:style => "margin-bottom: 18px;"}
        .btn-group
          %ul.nav.nav-pills
            %li.active
              %a{:href => "#classifications", :data => {:toggle => "tab"}, :rel => 'tooltip', :title => "View #{@bodycomp.client.first_name}'s measurements vs. norms"}
                %button.btn.btn-small
                  Norms
            %li
              %a{:href => "#bodycomp", :data => {:toggle => "tab"}, :rel => 'tooltip', :title => "View #{@bodycomp.client.first_name}'s Bodycomp data"}
                %button.btn.btn-small
                  Bodycomp
            %li
              %a{:href => "#skinfolds", :data => {:toggle => "tab"}, :rel => 'tooltip', :title => "View #{@bodycomp.client.first_name}'s skinfold measurements"}
                %button.btn.btn-small
                  Skinfold
            %li
              %a{:href => "#circumferences", :data => {:toggle => "tab"}, :rel => 'tooltip', :title => "View #{@bodycomp.client.first_name}'s circumference measurements"}
                %button.btn.btn-small
                  Girth
            %li
              %a{:href => "#pictures", :data => {:toggle => "tab"}, :rel => 'tooltip', :title => "View #{@bodycomp.client.first_name}'s Bodycomp pictures"}
                %button.btn.btn-small
                  %i.icon-camera
        .tab-content{:style => "padding-bottom: 9px; border-bottom: 1px solid #ddd;"}
          .tab-pane.active{:id => "classifications"}
            - if false
              %dd
                A person's body fat percentage is the total weight of the person's fat divided by the person's weight and consists of essential body
                fat and storage body fat. Essential body fat is necessary to maintain life and reproductive functions. The percentage for women is
                greater than that for men, due to the demands of childbearing and other hormonal functions. Essential fat is 3–5% in men, and 8–12% in
                women. Storage body fat consists of fat accumulation in adipose tissue, part of which protects internal organs in the chest and abdomen.
            %dt
              = "Body Fat: " + @bodycomp.bodyfat_percent.round(1).to_s
              = "% (lean mass: #{@bodycomp.lean_mass.round(1).to_s} | fat mass #{@bodycomp.fat_mass.round(1).to_s})"
            - if false
              - unless @bodycomp.neck.blank? or @bodycomp.neck.zero? or @bodycomp.waist.blank? or @bodycomp.waist.zero? or @bodycomp.hip.blank? or @bodycomp.hip.zero?
                %dt
                  = "Department of Defense Body Fat"
                %dd
                  = @bodycomp.defense_bodyfat_percent.round(1).to_s + "% (lean mass: #{@bodycomp.defense_lean_mass.round(1).to_s} | fat mass #{@bodycomp.defense_fat_mass.round(1).to_s})"
            %table
              %tr
                %th Classification
                %th Women (fat)
                %th Men (fat)
              - if (@bodycomp.sex == "Male" and @bodycomp.bodyfat_percent <= 4) or (@bodycomp.sex == "Female" and @bodycomp.bodyfat_percent <= 12)
                %tr.yellow_background
                  %td Essential Fat
                  %td 10-12%
                  %td 2-4%
              - else
                %tr
                  %td Essential Fat
                  %td 10-12%
                  %td 2-4%
              - if (@bodycomp.sex == "Male" and @bodycomp.bodyfat_percent <= 13 and @bodycomp.bodyfat_percent > 4) or (@bodycomp.sex == "Female" and @bodycomp.bodyfat_percent <= 20 and @bodycomp.bodyfat_percent > 12)
                %tr.yellow_background
                  %td Athletes
                  %td 14-20%
                  %td 6-13%
              - else
                %tr
                  %td Athletes
                  %td 14-20%
                  %td 6-13%
              - if (@bodycomp.sex == "Male" and @bodycomp.bodyfat_percent <= 17 and @bodycomp.bodyfat_percent > 13) or (@bodycomp.sex == "Female" and @bodycomp.bodyfat_percent <= 24 and @bodycomp.bodyfat_percent > 20)
                %tr.yellow_background
                  %td Fitness
                  %td 21-24%
                  %td 14-17%
              - else
                %tr
                  %td Fitness
                  %td 21-24%
                  %td 14-17%
              - if (@bodycomp.sex == "Male" and @bodycomp.bodyfat_percent <= 25 and @bodycomp.bodyfat_percent > 17) or (@bodycomp.sex == "Female" and @bodycomp.bodyfat_percent <= 31 and @bodycomp.bodyfat_percent > 24)
                %tr.yellow_background
                  %td Acceptable
                  %td 25-31%
                  %td 18-25%
              - else
                %tr
                  %td Acceptable
                  %td 25-31%
                  %td 18-25%
              - if (@bodycomp.sex == "Male" and @bodycomp.bodyfat_percent >= 25) or (@bodycomp.sex == "Female" and @bodycomp.bodyfat_percent > 31)
                %tr.yellow_background
                  %td Obese
                  %td 32%+
                  %td 25%+
              - else
                %tr
                  %td Obese
                  %td 32%+
                  %td 25%+
            %dt
              = "Basil Metabolic Rate (BMR): "
              = @bodycomp.bmr.round.to_s + " calories"
            %table
              %tr
                %th Activity Level
                %th Daily Calories
              %tr
                %td Sedentary (little or no exercise, desk job)
                %td= (@bodycomp.bmr*1.2).round
              %tr
                %td Lightly Active (light exercise/sports 1-3 days/wk)
                %td= (@bodycomp.bmr*1.375).round
              %tr.yellow_background
                %td Moderately Active (moderate exercise/sports 3-5 days/wk)
                %td= (@bodycomp.bmr*1.55).round
              %tr
                %td Very Active (hard exercise/sports 6-7 days/wk)
                %td= (@bodycomp.bmr*1.725).round
              %tr
                %td Extremely Active (hard daily exercise/sports & physical job or 2X day training)
                %td= (@bodycomp.bmr*1.9).round
            %dt
              Body Mass Index:
              = @bodycomp.bmi
            %table
              %tr
                %th
                  BMI
                %th
                  Status
              - if @bodycomp.bmi < 18.5
                %tr.yellow_background
                  %td Below 18.5
                  %td Underweight
              - else
                %tr
                  %td Below 18.5
                  %td Underweight
              - if @bodycomp.bmi >= 18.5 and @bodycomp.bmi <= 24.9
                %tr.yellow_background
                  %td 18.5 – 24.9
                  %td Normal
              - else
                %tr
                  %td 18.5 – 24.9
                  %td Normal
              - if @bodycomp.bmi >= 25 and @bodycomp.bmi <= 29.9
                %tr.yellow_background
                  %td 25.0 – 29.9
                  %td Overweight
              - else
                %tr
                  %td 25.0 – 29.9
                  %td Overweight
              - if @bodycomp.bmi >= 30
                %tr.yellow_background
                  %td 30.0 and Above
                  %td Obese
              - else
                %tr
                  %td 30.0 and Above
                  %td Obese
            - unless @bodycomp.waist.blank? or @bodycomp.waist.zero?
              %dt
                = "Waist Circumference: "
                = @bodycomp.waist
                = @bodycomp.circumference_units
              %table
                %tr
                  %th
                    Male
                  %th
                    Female
                  %th
                    Classification
                - if (@bodycomp.sex == "Male" and @bodycomp.circumference_units == "inches" and @bodycomp.waist <= 40) or (@bodycomp.sex == "Male" and @bodycomp.circumference_units == "centimeters" and @bodycomp.waist <= 102) or (@bodycomp.sex == "Female" and @bodycomp.circumference_units == "inches" and @bodycomp.waist <= 35) or (@bodycomp.sex == "Female" and @bodycomp.circumference_units == "centimeters" and @bodycomp.waist <= 88)
                  %tr.yellow_background
                    %td 40in (102cm) or less
                    %td 35in (88cm) or less
                    %td Low Risk
                - else
                  %tr
                    %td 40in (102cm) or less
                    %td 35in (88cm) or less
                    %td Low Risk
                - if (@bodycomp.sex == "Male" and @bodycomp.circumference_units == "inches" and @bodycomp.waist > 40) or (@bodycomp.sex == "Male" and @bodycomp.circumference_units == "centimeters" and @bodycomp.waist > 102) or (@bodycomp.sex == "Female" and @bodycomp.circumference_units == "inches" and @bodycomp.waist > 35) or (@bodycomp.sex == "Female" and @bodycomp.circumference_units == "centimeters" and @bodycomp.waist > 88)
                  %tr.yellow_background
                    %td Greater than 40in (102cm)
                    %td Greater than 35in (88cm)
                    %td Abdominal Obesity
                - else
                  %tr
                    %td Greater than 40in (102cm)
                    %td Greater than 35in (88cm)
                    %td Abdominal Obesity
              - unless @bodycomp.waist.zero? or @bodycomp.hip.zero? or @bodycomp.waist.blank? or @bodycomp.hip.blank?
                %dt
                  = "Waist-to-hip Ratio (WHR): "
                  = @bodycomp.waist_hip_ratio
                %table
                  %tr
                    %th
                      Male
                    %th
                      Female
                    %th
                      Health Risk Based Solely on WHR
                  - if (@bodycomp.sex == "Male" and @bodycomp.waist_hip_ratio <= 0.95) or (@bodycomp.sex == "Female" and @bodycomp.waist_hip_ratio <= 0.80)
                    %tr.yellow_background
                      %td 0.95 or below
                      %td 0.80 or below
                      %td Low Risk
                  - else
                    %tr
                      %td 0.95 or below
                      %td 0.80 or below
                      %td Low Risk
                  - if (@bodycomp.sex == "Male" and @bodycomp.waist_hip_ratio > 0.95 and @bodycomp.waist_hip_ratio <= 1) or (@bodycomp.sex == "Female" and @bodycomp.waist_hip_ratio > 0.80 and @bodycomp.waist_hip_ratio <= 0.85)
                    %tr.yellow_background
                      %td 0.96 to 1.0
                      %td 0.81 to 0.85
                      %td Moderate Risk
                  - else
                    %tr
                      %td 0.96 to 1.0
                      %td 0.81 to 0.85
                      %td Moderate Risk
                  - if (@bodycomp.sex == "Male" and @bodycomp.waist_hip_ratio > 1) or (@bodycomp.sex == "Female" and @bodycomp.waist_hip_ratio > 0.85)
                    %tr.yellow_background
                      %td 1.0+
                      %td 0.85+
                      %td High Risk
                  - else
                    %tr
                      %td 1.0+
                      %td 0.85+
                      %td High Risk
          .tab-pane{:id => "bodycomp"}
            = link_to "Graphs", bodycomp_graphs_bodycomp_path, :class =>  "btn btn-mini btn-warning", :type => "button"
            %dt
              %strong= "Percent Body Fat"
            %dd
              %table
                %th Date
                %th Result
                - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                  %tr
                    %td{:style => 'width: 50%;'}= bodycomp.date.strftime("%b %e %Y")
                    %td{:style => 'width: 50%;'}
                      = bodycomp.bodyfat_percent.round(1).to_s + "%"
            %dt
              %strong= "Body Weight"
            %dd
              %table
                %th Date
                %th Result
                - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                  %tr
                    %td{:style => 'width: 50%;'}= bodycomp.date.strftime("%b %e %Y")
                    %td{:style => 'width: 50%;'}
                      = bodycomp.weight.to_s + " " + @bodycomp.weight_units
            %dt
              %strong= "Lean Mass"
            %dd
              %table
                %th Date
                %th= "Result"
                - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                  %tr
                    %td{:style => 'width: 50%;'}= bodycomp.date.strftime("%b %e %Y")
                    %td{:style => 'width: 50%;'}
                      = bodycomp.lean_mass.round(1).to_s + " " + @bodycomp.weight_units
            %dt
              %strong= "Fat Mass"
            %dd
              %table
                %th Date
                %th= "Result"
                - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                  %tr
                    %td{:style => 'width: 50%;'}= bodycomp.date.strftime("%b %e %Y")
                    %td{:style => 'width: 50%;'}
                      = bodycomp.fat_mass.round(1).to_s + " " + @bodycomp.weight_units
            %dt
              %strong= "Basal Metabolic Rate"
            %dd
              %table
                %th Date
                %th Result
                - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                  %tr
                    %td{:style => 'width: 50%;'}= bodycomp.date.strftime("%b %e %Y")
                    %td{:style => 'width: 50%;'}
                      = bodycomp.bmr.round(1).to_s + " " + "Calories"
            %dt
              %strong= "Body Mass Index"
            %dd
              %table
                %th Date
                %th Result
                - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                  %tr
                    %td{:style => 'width: 50%;'}= bodycomp.date.strftime("%b %e %Y")
                    %td{:style => 'width: 50%;'}
                      = bodycomp.bmi
            - unless @bodycomp.waist.blank? or @bodycomp.hip.blank?
              %dt
                %strong= "Waist-to-hip Ratio"
              %dd
                %table
                  %th Date
                  %th Result
                  - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                    %tr
                      %td{:style => 'width: 50%;'}= bodycomp.date.strftime("%b %e %Y")
                      %td{:style => 'width: 50%;'}
                        = bodycomp.waist_hip_ratio
          .tab-pane{:id => "skinfolds"}
            = link_to "Graphs", skinfold_graphs_bodycomp_path, :class =>  "btn btn-mini btn-warning", :type => "button"
            - unless @bodycomp.pec.blank?
              %dt
                %strong= "Chest"
              %dd
                %table
                  %th Date
                  %th Result
                  - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                    %tr
                      %td= bodycomp.date.strftime("%b %e %Y")
                      %td
                        = bodycomp.pec.to_s + "mm"
            - unless @bodycomp.tri.blank?
              %dt
                %strong= "Triceps"
              %dd
                %table
                  %th Date
                  %th Result
                  - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                    %tr
                      %td= bodycomp.date.strftime("%b %e %Y")
                      %td
                        = bodycomp.tri.to_s + "mm"
            - unless @bodycomp.subscap.blank?
              %dt
                %strong= "Subscapular"
              %dd
                %table
                  %th Date
                  %th Result
                  - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                    %tr
                      %td= bodycomp.date.strftime("%b %e %Y")
                      %td
                        = bodycomp.subscap.to_s + "mm"
            - unless @bodycomp.suprailiac.blank?
              %dt
                %strong= "Suprailiac"
              %dd
                %table
                  %th Date
                  %th Result
                  - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                    %tr
                      %td= bodycomp.date.strftime("%b %e %Y")
                      %td
                        = bodycomp.suprailiac.to_s + "mm"
            - unless @bodycomp.midaxil.blank?
              %dt
                %strong= "Midaxillary"
              %dd
                %table
                  %th Date
                  %th Result
                  - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                    %tr
                      %td= bodycomp.date.strftime("%b %e %Y")
                      %td
                        = bodycomp.midaxil.to_s + "mm"
            - unless @bodycomp.umbilical.blank?
              %dt
                %strong= "Abdominal"
              %dd
                %table
                  %th Date
                  %th Result
                  - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                    %tr
                      %td= bodycomp.date.strftime("%b %e %Y")
                      %td
                        = bodycomp.umbilical.to_s + "mm"
            %dt
              %strong= "Thigh"
            %dd
              %table
                %th Date
                %th Result
                - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                  %tr
                    %td= bodycomp.date.strftime("%b %e %Y")
                    %td
                      = bodycomp.quad.to_s + "mm"
            - unless @bodycomp.calf.blank?
              %dt
                %strong= "Calf"
              %dd
                %table
                  %th Date
                  %th Result
                  - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                    %tr
                      %td= bodycomp.date.strftime("%b %e %Y")
                      %td
                        = bodycomp.calf.to_s + "mm"
            - if false
              - unless @bodycomp.bicep.blank?
                %dt
                  %strong= "Biceps"
                %dd
                  %table
                    %th Date
                    %th Result
                    - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                      %tr
                        %td= bodycomp.date.strftime("%b %e %Y")
                        %td
                          = bodycomp.bicep.to_s + "mm"
              - unless @bodycomp.low_back.blank?
                %dt
                  %strong= "Low Back"
                %dd
                  %table
                    %th Date
                    %th Result
                    - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                      %tr
                        %td= bodycomp.date.strftime("%b %e %Y")
                        %td
                          = bodycomp.low_back.to_s + "mm"
          .tab-pane{:id => "circumferences"}
            = link_to "Graphs", girth_graphs_bodycomp_path, :class =>  "btn btn-mini btn-warning", :type => "button"
            - unless @bodycomp.waist.blank?
              %dt
                %strong= "Waist"
              %dd
                %table
                  %th Date
                  %th= "Measure (" +  @bodycomp.circumference_units + ")"
                  - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                    %tr
                      %td= bodycomp.date.strftime("%b %e %Y")
                      %td
                        = bodycomp.waist
            - unless @bodycomp.hip.blank?
              %dt
                %strong= "Hip"
              %dd
                %table
                  %th Date
                  %th= "Measure (" +  @bodycomp.circumference_units + ")"
                  - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                    %tr
                      %td= bodycomp.date.strftime("%b %e %Y")
                      %td
                        = bodycomp.hip
            - unless @bodycomp.neck.blank?
              %dt
                %strong= "Neck"
              %dd
                %table
                  %th Date
                  %th= "Measure (" +  @bodycomp.circumference_units + ")"
                  - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                    %tr
                      %td= bodycomp.date.strftime("%b %e %Y")
                      %td
                        = bodycomp.neck
            - unless @bodycomp.shoulder.blank?
              %dt
                %strong= "Shoulder"
              %dd
                %table
                  %th Date
                  %th= "Measure (" +  @bodycomp.circumference_units + ")"
                  - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                    %tr
                      %td= bodycomp.date.strftime("%b %e %Y")
                      %td
                        = bodycomp.shoulder
            - unless @bodycomp.chest.blank?
              %dt
                %strong= "Chest"
              %dd
                %table
                  %th Date
                  %th= "Measure (" +  @bodycomp.circumference_units + ")"
                  - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                    %tr
                      %td= bodycomp.date.strftime("%b %e %Y")
                      %td
                        = bodycomp.chest
            - unless @bodycomp.arm.blank?
              %dt
                %strong= "Arm"
              %dd
                %table
                  %th Date
                  %th= "Measure (" +  @bodycomp.circumference_units + ")"
                  - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                    %tr
                      %td= bodycomp.date.strftime("%b %e %Y")
                      %td
                        = bodycomp.arm
            - unless @bodycomp.thigh.blank?
              %dt
                %strong= "Thigh"
              %dd
                %table
                  %th Date
                  %th= "Measure (" +  @bodycomp.circumference_units + ")"
                  - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                    %tr
                      %td= bodycomp.date.strftime("%b %e %Y")
                      %td
                        = bodycomp.thigh
            - unless @bodycomp.gastroc.blank?
              %dt
                %strong= "Calf"
              %dd
                %table
                  %th Date
                  %th= "Measure (" +  @bodycomp.circumference_units + ")"
                  - @bodycomp.client.bodycomps.order(:date).reverse.each do |bodycomp|
                    %tr
                      %td= bodycomp.date.strftime("%b %e %Y")
                      %td
                        = bodycomp.gastroc
          .tab-pane{:id => "pictures"}
            %ul.thumbnails
              - @bodycomp.pictures.each do |pic|
                %li.span4
                  = link_to image_tag(pic.image_url(:thumb).to_s), "#pic" + pic.id.to_s, :class => "thumbnail", "data-toggle" => "modal", :href => "#pic" + pic.id.to_s, :type => "button", :title => "Click to view large image", :rel => 'tooltip'
                %div{:id => "pic" + pic.id.to_s, :class => "modal", :style => "display:none;"}
                  .modal-header
                    = link_to "×", '#', :class => "close", "data-dismiss" => "modal"
                    = @bodycomp.date.strftime("%b %e %Y")
                  .modal-body
                    = image_tag(pic.image_url.to_s)
                  .modal-footer
                    = link_to 'Close', '#', :class => 'btn', "data-dismiss" => "modal"

  .form-actions
    %a{:href => bodycomps_path, :class => 'btn'}
      %i.icon-chevron-left
      Back
    %a{:href => edit_bodycomp_path(@bodycomp), :class => 'btn'}
      = "Edit"
      %i.icon-edit
    %a{:href => bodycomp_path(@bodycomp), :data => { :confirm => "Are you sure?" }, :method => :delete, :class => 'btn btn-danger'}
      = "Delete"
      %i.icon-remove
